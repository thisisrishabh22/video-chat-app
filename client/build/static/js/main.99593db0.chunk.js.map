{"version":3,"sources":["logo.svg","context/SocketContext.jsx","components/VideoPlayer.jsx","components/Options.jsx","components/Notifications.jsx","App.js","reportWebVitals.js","index.js"],"names":["SocketContext","createContext","socket","io","SocketContextProvider","props","useState","stream","setStream","me","setMe","call","setCall","callAccepted","setCallAccepted","callEnded","setCallEnded","name","setName","videoOn","setVideoOn","audioOn","myVideo","useRef","userVideo","connectionRef","useEffect","navigator","mediaDevices","getUserMedia","video","valueOf","audio","then","currentStream","current","srcObject","on","id","from","callerName","signal","isReceivingCall","getVideoTracks","stop","Provider","value","callUser","peer","Peer","initiator","trickle","data","emit","userToCall","signalData","leaveCall","destroy","window","location","reload","answerCall","to","children","useStyles","makeStyles","theme","width","breakpoints","down","gridContainer","justifyContent","flexDirection","paper","padding","border","margin","VideoPlayer","useContext","classes","Grid","container","className","Paper","item","xs","md","Typography","variant","gutterBottom","playsInline","muted","ref","autoPlay","root","display","marginTop","Options","idToCall","setIdToCall","Container","elevation","noValidate","autoComplete","onClick","TextField","label","onChange","e","target","fullWidth","style","marginBottom","text","Button","color","startIcon","Assignment","fontSize","PhoneDisabled","Phone","Notifications","appBar","borderRadius","alignItems","maxWidth","image","marginLeft","wrapper","App","AppBar","position","align","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","responsiveFontSizes","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.99593db0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { createContext, useEffect, useRef, useState } from 'react'\r\nimport { io } from 'socket.io-client'\r\nimport Peer from 'simple-peer'\r\n\r\nconst SocketContext = createContext();\r\n\r\n// const socket = io(\"http://localhost:5110\")\r\nconst socket = io(\"https://videocallapi1.rishabhsingh-dev.me\")\r\n\r\nconst SocketContextProvider = (props) => {\r\n\r\n    const [stream, setStream] = useState(null);\r\n    const [me, setMe] = useState(\"\");\r\n    const [call, setCall] = useState({});\r\n    const [callAccepted, setCallAccepted] = useState(false);\r\n    const [callEnded, setCallEnded] = useState(false);\r\n    const [name, setName] = useState(\"\");\r\n    const [videoOn, setVideoOn] = useState(true);\r\n    const [audioOn, setAudioOn] = useState(true);\r\n\r\n\r\n\r\n    const myVideo = useRef()\r\n    const userVideo = useRef()\r\n    const connectionRef = useRef()\r\n\r\n    useEffect(() => {\r\n        navigator.mediaDevices.getUserMedia({ video: videoOn === true ? true.valueOf : videoOn, audio: true }).then((currentStream) => {\r\n            setStream(currentStream)\r\n            myVideo.current.srcObject = currentStream;\r\n        })\r\n\r\n        socket.on(\"me\", (id) => setMe(id));\r\n\r\n        socket.on('call_user', ({ from, name: callerName, signal }) => {\r\n            setCall({ isReceivingCall: true, from, name: callerName, signal });\r\n        });\r\n    }, [])\r\n\r\n    const videoOffRun = () => {\r\n        if (stream !== null) {\r\n            if (stream.getVideoTracks()[0]) {\r\n                if (videoOn === false) {\r\n                    stream.getVideoTracks()[0].stop();\r\n                }\r\n                else {\r\n                    navigator.mediaDevices.getUserMedia({ video: videoOn === true ? true.valueOf : videoOn, audio: audioOn }).then((currentStream) => {\r\n                        setStream(currentStream)\r\n                        myVideo.current.srcObject = currentStream;\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        videoOffRun()\r\n    }, [videoOn])\r\n\r\n    const answerCall = () => {\r\n        setCallAccepted(true)\r\n\r\n        const peer = new Peer({ initiator: false, trickle: false, stream })\r\n\r\n        peer.on(\"signal\", (data) => {\r\n            socket.emit(\"answer_call\", { signal: data, to: call.from })\r\n        })\r\n\r\n        peer.on(\"stream\", (currentStream) => {\r\n            userVideo.current.srcObject = currentStream;\r\n        })\r\n\r\n        peer.signal(call.signal)\r\n\r\n        connectionRef.current = peer;\r\n    }\r\n    const callUser = (id) => {\r\n\r\n        const peer = new Peer({ initiator: true, trickle: false, stream })\r\n\r\n        peer.on(\"signal\", (data) => {\r\n            socket.emit(\"call_user\", { userToCall: id, signalData: data, from: me, name })\r\n        })\r\n\r\n        peer.on(\"stream\", (currentStream) => {\r\n            userVideo.current.srcObject = currentStream;\r\n        })\r\n\r\n        socket.on(\"call_accepted\", (signal) => {\r\n            setCallAccepted(true)\r\n\r\n            peer.signal(signal);\r\n        })\r\n\r\n        connectionRef.current = peer;\r\n    }\r\n    const leaveCall = () => {\r\n        setCallEnded(true)\r\n\r\n        connectionRef.current.destroy()\r\n\r\n        window.location.reload()\r\n    }\r\n\r\n    return (\r\n        <SocketContext.Provider value={{\r\n            call,\r\n            callAccepted,\r\n            callEnded,\r\n            myVideo,\r\n            userVideo,\r\n            stream,\r\n            name,\r\n            setName,\r\n            me,\r\n            callUser,\r\n            leaveCall,\r\n            answerCall,\r\n            setVideoOn,\r\n            videoOn\r\n        }}>\r\n            {props.children}\r\n        </SocketContext.Provider>\r\n    )\r\n}\r\n\r\nexport { SocketContext, SocketContextProvider }","import { Grid, Paper, Typography } from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport React, { useContext } from \"react\";\r\nimport { SocketContext } from \"../context/SocketContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    video: {\r\n        width: \"550px\",\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            width: \"300px\",\r\n        },\r\n    },\r\n    gridContainer: {\r\n        justifyContent: \"center\",\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            flexDirection: \"column\",\r\n        },\r\n    },\r\n    paper: {\r\n        padding: \"10px\",\r\n        border: \"2px solid black\",\r\n        margin: \"10px\",\r\n    },\r\n}));\r\n\r\nconst VideoPlayer = () => {\r\n    const {\r\n        call,\r\n        callAccepted,\r\n        callEnded,\r\n        myVideo,\r\n        userVideo,\r\n        stream,\r\n        name,\r\n    } = useContext(SocketContext);\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid container className={classes.gridContainer}>\r\n            {/* MY video */}\r\n            {\r\n                stream && (\r\n                    <Paper className={classes.paper}>\r\n                        <Grid item xs={12} md={6}>\r\n                            <Typography variant=\"h5\" gutterBottom>\r\n                                {name || \"Name\"}\r\n                            </Typography>\r\n                            <video\r\n                                playsInline\r\n                                muted\r\n                                ref={myVideo}\r\n                                autoPlay\r\n                                className={classes.video}\r\n                            />\r\n                        </Grid>\r\n                    </Paper>\r\n                )\r\n            }\r\n\r\n            {/* User Video */}\r\n            {\r\n                callAccepted && !callEnded && (\r\n                    <Paper className={classes.paper}>\r\n                        <Grid item xs={12} md={6}>\r\n                            <Typography variant=\"h5\" gutterBottom>\r\n                                {call.name || 'Name'}\r\n                            </Typography>\r\n                            <video\r\n                                playsInline\r\n                                muted\r\n                                ref={userVideo}\r\n                                autoPlay\r\n                                className={classes.video}\r\n                            />\r\n                        </Grid>\r\n                    </Paper>\r\n                )\r\n            }\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default VideoPlayer;\r\n","import {\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport { Assignment, Phone, PhoneDisabled } from \"@mui/icons-material\";\r\nimport { SocketContext } from \"../context/SocketContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  gridContainer: {\r\n    width: \"100%\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      flexDirection: \"column\",\r\n    },\r\n  },\r\n  container: {\r\n    width: \"600px\",\r\n    margin: \"35px 0\",\r\n    padding: 0,\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"80%\",\r\n    },\r\n  },\r\n  margin: {\r\n    marginTop: 20,\r\n  },\r\n  padding: {\r\n    padding: 20,\r\n  },\r\n  paper: {\r\n    padding: \"10px 20px\",\r\n    border: \"2px solid black\",\r\n  },\r\n}));\r\n\r\nconst Options = (props) => {\r\n  const { setVideoOn, videoOn, callAccepted, callEnded, name, setName, me, callUser, leaveCall } =\r\n    useContext(SocketContext);\r\n\r\n  const [idToCall, setIdToCall] = useState(\"\");\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Container className={classes.container}>\r\n      <Paper elevation={10} className={classes.paper}>\r\n        <form className={classes.root} noValidate autoComplete=\"off\">\r\n          <Grid container className={classes.gridContainer}>\r\n            <Grid item xs={12} md={6} className={classes.padding}>\r\n              <p onClick={() => setVideoOn(!videoOn)}>Video Off</p>\r\n              <Typography gutterBottom variant=\"h6\">\r\n                Account Info\r\n              </Typography>\r\n              <TextField\r\n                label=\"Name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                fullWidth\r\n                style={{ marginBottom: 20 }}\r\n              />\r\n              <CopyToClipboard text={me} className={classes.margin}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  fullWidth\r\n                  startIcon={<Assignment fontSize=\"large\" />}\r\n                >\r\n                  Copy Your ID\r\n                </Button>\r\n              </CopyToClipboard>\r\n            </Grid>\r\n            <Grid item xs={12} md={6} className={classes.padding}>\r\n              <Typography gutterBottom variant=\"h6\">\r\n                Make a call\r\n              </Typography>\r\n              <TextField\r\n                label=\"ID to call\"\r\n                value={idToCall}\r\n                onChange={(e) => setIdToCall(e.target.value)}\r\n                fullWidth\r\n                style={{ marginBottom: 20 }}\r\n              />\r\n              {callAccepted && !callEnded ? (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  startIcon={<PhoneDisabled fontSize=\"large\" />}\r\n                  fullWidth\r\n                  onClick={leaveCall}\r\n                  className={classes.margin}\r\n                >\r\n                  Hang Up\r\n                </Button>\r\n              ) : (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  startIcon={<Phone fontSize=\"large\" />}\r\n                  fullWidth\r\n                  onClick={() => callUser(idToCall)}\r\n                  className={classes.margin}\r\n                >\r\n                  Call\r\n                </Button>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n        {props.children}\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Options;\r\n","import { Button } from '@mui/material';\r\nimport React, { useContext } from 'react'\r\n\r\nimport { SocketContext } from \"../context/SocketContext\";\r\n\r\nconst Notifications = () => {\r\n\r\n    const { call, answerCall, callAccepted } = useContext(SocketContext)\r\n    return (\r\n        <>\r\n            {call.isReceivingCall && !callAccepted && (\r\n                <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                    <h1>{call.name} is calling !</h1>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => { answerCall() }}>Answer</Button>\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Notifications\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { AppBar, Typography } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport VideoPlayer from \"./components/VideoPlayer\";\nimport Options from \"./components/Options\";\nimport Notifications from \"./components/Notifications\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    borderRadius: 25,\n    margin: \"30px 100px\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    maxWidth: \"800px\",\n    border: \"2px solid white\",\n\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"90%\",\n    },\n  },\n  image: {\n    marginLeft: \"15px\",\n  },\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <div className={classes.wrapper}>\n      <AppBar className={classes.appBar} position=\"static\" color=\"transparent\" elevation>\n        <Typography variant=\"h2\" align=\"center\" color=\"white\">\n          WeBVideo Chat\n        </Typography>\n      </AppBar>\n      <VideoPlayer />\n      <Options>\n        <Notifications />\n      </Options>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ThemeProvider } from \"@mui/styles\";\n\nimport { createTheme, responsiveFontSizes } from \"@mui/material/styles\";\nimport { SocketContextProvider } from \"./context/SocketContext\";\nlet theme = createTheme();\ntheme = responsiveFontSizes(theme);\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <SocketContextProvider>\n        <App />\n      </SocketContextProvider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}